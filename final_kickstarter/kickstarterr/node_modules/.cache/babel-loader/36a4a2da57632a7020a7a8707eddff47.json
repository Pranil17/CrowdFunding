{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userSlice\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n/* export const store = ()=> configureStore({\r\n    reducer:persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n}); */\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);\n/* export default configureStore({\r\n  reducer:{\r\n    cart:cartReducer,\r\n    user:userReducer\r\n  },\r\n}); */","map":{"version":3,"sources":["C:/pranil_files/kickstarter_final/final_kickstarter/kickstarterr/src/redux/store.js"],"names":["configureStore","combineReducers","cartReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","persistConfig","key","version","rootReducer","user","cart","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,eAAxB,QAA8C,kBAA9C;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBC,EAAAA,OAAO,EAAE,CAFS;AAGlBH,EAAAA;AAHkB,CAAtB;AAMA,MAAMI,WAAW,GAAGf,eAAe,CAAC;AAACgB,EAAAA,IAAI,EAAEd,WAAP;AAAoBe,EAAAA,IAAI,EAAEhB;AAA1B,CAAD,CAAnC;AAEA,MAAMiB,gBAAgB,GAAGd,cAAc,CAACQ,aAAD,EAAgBG,WAAhB,CAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMI,KAAK,GAAGpB,cAAc,CAAC;AAClCqB,EAAAA,OAAO,EAACF,gBAD0B;AAElCG,EAAAA,UAAU,EAAGC,oBAAD,IACZA,oBAAoB,CAAC;AACnBC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,cAAc,EAAE,CAACnB,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADC;AADA,GAAD;AAHc,CAAD,CAA5B;AAUP,OAAO,IAAIe,SAAS,GAAGtB,YAAY,CAACgB,KAAD,CAA5B;AAEP;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {configureStore, combineReducers} from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./cartRedux\";\r\nimport userReducer from \"./userSlice\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({user: userReducer, cart: cartReducer});\r\n  \r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n/* export const store = ()=> configureStore({\r\n    reducer:persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n}); */\r\n\r\nexport const store = configureStore({\r\n  reducer:persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n  getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport let persistor = persistStore(store);\r\n\r\n/* export default configureStore({\r\n  reducer:{\r\n    cart:cartReducer,\r\n    user:userReducer\r\n  },\r\n}); */\r\n"]},"metadata":{},"sourceType":"module"}