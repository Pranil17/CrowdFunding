{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport cartReducer from \"./cartRedux\";\nimport userReducer from \"./userSlice\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n/* const persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({user: userReducer, cart: cartReducer});\r\n  \r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = ()=> configureStore({\r\n    reducer:persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport let persistor = persistStore(store); */\n\nexport default configureStore({\n  reducer: {\n    cart: cartReducer,\n    user: userReducer\n  }\n});","map":{"version":3,"sources":["C:/pranil_files/kickstarter_final/final_kickstarter/kickstarterr/src/redux/store.js"],"names":["configureStore","combineReducers","cartReducer","userReducer","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","reducer","cart","user"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,eAAxB,QAA8C,kBAA9C;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,SAJJ,EAKIC,KALJ,EAMIC,OANJ,EAOIC,KAPJ,EAQIC,QARJ,QASS,eATT;AAUA,OAAOC,OAAP,MAAoB,2BAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeZ,cAAc,CAAC;AAC5Ba,EAAAA,OAAO,EAAC;AACNC,IAAAA,IAAI,EAACZ,WADC;AAENa,IAAAA,IAAI,EAACZ;AAFC;AADoB,CAAD,CAA7B","sourcesContent":["import {configureStore, combineReducers} from \"@reduxjs/toolkit\";\r\nimport cartReducer from \"./cartRedux\";\r\nimport userReducer from \"./userSlice\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n  } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\n/* const persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({user: userReducer, cart: cartReducer});\r\n  \r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\nexport const store = ()=> configureStore({\r\n    reducer:persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport let persistor = persistStore(store); */\r\n\r\nexport default configureStore({\r\n  reducer:{\r\n    cart:cartReducer,\r\n    user:userReducer\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}